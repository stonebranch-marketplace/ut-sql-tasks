<?xml version="1.0" encoding="UTF-8"?><unload unload_date="2021-05-19 14:43:09" unload_format="1" unload_table="ops_unv_tmplt" unload_version="7.0.0.0"><ops_unv_tmplt action="INSERT_OR_UPDATE"><credentials_var/><agent/><ext_archive>UEsDBBQAAAAIAAyza1LbQv2EHQwAALFGAAAMAAAAZXh0ZW5zaW9uLnB57Vxtc+M0EP6eXyFcGNsQMu3B8CEQhl4bjnL0ZZIWhjkYj2MrialjG8tuL2TKb2f1YsuWX+KUUA6uubmLbT272l2tdleWcgfoOE2WYYzQEI3dey9Ar8Jl7wCd2glGiD49+uLTSyf59MXhi8PeAbSchNE69hbLBBmOiaZJGOBZbAfOEp0FTh9R3AChY99HDEVQjAmO77A76PU0Tet9j4NbLyDoJvDucExsH43fJjggXhiQ3p8tn16vhgRFcXjnuRh5QYIXsZ3QZ/M0cOiF7XvJGt17yRKJXnsnZwikoVxAnOslRrjCKYGn89D3Q7DGosxr2Ot9ik5iTI3zfThDBkngchRRFYOkH6dBADQmgF6mnu8WMTN4kNCWU+zjMrk9A2retg7sleeAjVcrO3CHPYQ+RidgXOxzjsyCPW8VhXGCQpJdkTWBp3N4MojsZDkgEUhrWNbc87FlmW8Of0UfjJCuU4YI0ALmBWCLxDjs54S/hV5gNHPpI933Zrpp9g4kFzuKcOAatSxcLwaNsGRS5JAJ7yUY7ujXwHZd+g1kj+AXxeAEhna1BocOGD+CvvrqK6ShTxBJYoP1sMAJ/Y5s59ZeYGKYJrRq6Ouvv9bMHjCZx+EKpZmjWbl7CGml2+Yu2EI0cLETZpQuH1zL4YO7M9ky9BzcgTojzAWcYJL6Sa+xt920bRV6IMRr0HkLMVexXvHtLPIrK2YKN9mBc4iBF3xxDLvzAmjrOb5NiKQxqhYw+Sxy8RxZlhd4iWUZBPtz8ZzNsDTCsZFT9BFrH+RwM0OyhgE4M/ZdgkboAqJpjzV+U6++oYn7I83MxQCftn4LZ8Ric4Oy7CPOsiATRI4svAg7Z2OVhCgKo9SHWJSjgR2i3ASWs0NhwKLjq5uzItuyMn64gNGcpQtDG0NMjmkQLcosPne2n2Kq8hvd5h8d5vKMf/Rfc9wKEwITFYD6Ob8cou8wRGfu/26tSnmHH+i9ZuneekmDcDFO0jhQPcfI2yvCZVf9HKLqKS5MZXTlsLIob81olC8MbfFxl5HNh1RQsvFi1C0DpSvSlHrVzV4ujZxikLnipEUgmaAZEh1fncHTJrfnF4r5QRqXmvYwfx6miaTZPOTP0+DOgrYoTaibbDR75mhDpIHE2oPeqLSijBBiCIz1wTyMV3ZiCM3MRh4i10CEoIyKpDQ9isdAL0WN/VxfmosMHZ7oSgcLP5xBaOOxiajRgiRhjF0LyhUHu2mMrWQdYaPQxwEtuSIop8B6cPk7uF3CO4O+zAJsiqnWAdRT3HpcLuGpgxqzv9F42ITJ8ivw1qAFwEeDz7U28Isi+MUW8GdF8GdbwBCyOXzzoGWG56GcVTVHh/Rjmm0sZmHoYzuosKHPS7xMs2hi+HO9jMN7mBIOjmiBKNuoAYEbK+7e6EGYWDAJYwxBbacAEzsjORHKkYWNV67LSKrFUdV5MZKXVAuZN4B3EGBW4Vor6EZMaUfcmsOq63vBPDS0GtpCAFVa6HQtSabD9HBntj5EzlvrMrYdHw+mP09PXx73KzibrFTc8fS8igsh56rAy6vxpIqc3UYq8OXrqyrOXbgVCV+dVnG3q0TFvT6/VnA0tQOKfuUNMoQl8ZqbWo2BuQVVm77JmniubIhQCpt8hITfotd4PY5jWP/ZBN3itYXpzbCeI2sz9I+Ijj6SYM5SsoUlw1GhG5/gOsVU/aRTKsGP9t7shWVwwQFdO7FnNuHBEY2yhCPjrlZCaHR1kxN7c5WeRiQ2tlpZGd6/HPpSI5dKNhaMUukBFt7aak1+9/tRSJJFjOkl/OWL1fpeo3Xozpy6LmWL7K+q0dIO7HrOMDUjr9jAi60lMPU90UkOkgPd6jfazcXri8ufLtDp8fXxy+PpGF3/fDVGHxGtX5at3aEiKM+ls9TmQuEz+/EF4sRelDST8nZJU3XSuYZOxNQNFrQy25S6e0CDwQA89xHeB0jevcSBy/BHZagUC7/FTppgizO0Zn7o3FpAZShm92uYRz4AGcVO3IEs59/sLlXDQXP1owGGR0GCAoxdQi06w7A0gb/zIcoN0EcFcUXnVb9qnyNiTkptq5oyAFfU2MpNzO0tLAVqB755oGhjm4O6cqXxoZWhHVkUk/HrHgsqozHXxpPJ5QRewyjTdajOltpB5+7WRzyCImmO2lgiw0ezu6oxhPOrjQCVrtwZXYi3R5oynMbTVjhDtNZXVdoyRglrKUhdTwXxFN5GerZPBhSklUPvfRi7W+kyoKCVYTSzS6xvDuVSqTmoSnp4LJd4VQL4h7cWA6lLAiuBMDEqlGYr+xbDc4MPGpRoHT5igLqBKWN4ncA0HQlPMOmiwJsz18UuDUw2vKuwA6THOrgxmIHercHAMaDhnQktB8B+cAF+Du9EIRgQhiARdjxacCwB6lAkSZ0lLd70X/RBU5V0Or0YDlmmZe9BhV3MijuVfKlucaDc5wyYcmFS4pPNHdlDaSAEVIaComeO6D/S3qoDjrKLKgR0Gwn9nsrq6NswhkhiryIIQbTDdZjGfILRwaeqJ7YXMHCfNuq+z4SCbrhQUiK2+yBph9wasX5Dn1zAE70YZP99G1cb6dCPCn7wZM7/Lw2Dk8YEOubLswG/M0oTQ4YullWTOFXrOE41cGzfp5UshP3ZigiaAQ7sGVR+nbIrn+6wxsxe6FB2YD4oPIGBEoxBZlgyB0YhNPepCSpBmyYhAPO7Aex+uaCgsnKtaiNyq1FgYrZKzYHDUqoQTFytsnCVXn4qcmS+jsVxpxUs3NSXB7sNHn3NkxLrzgYnyHSHG0MKeHFz/nI8KfflewFuo5leT84uXpVp7pew54WuQQQuQWcXokrQDiH+G1nH/YLghUwgVS+0UwbspaBh0n3EQ9p99TMDz7hVW/imHOtV4ZTbWQrvhwQaSllJPNxWsz1XbP/liq0SSvZdwe1cxb0zldxjqrmyuz2+qFMLO4nho/S42qOm/nhEDfJ+1Xoi7b97ds8B1RpQusz7UAZ2KAU7VxRb87koCXd/o7a9NNylPGwvESsV2zjbKWM1WnbTqVLLwHX12vtRiorTTYgfbdmtQm2rG2ELU5agc5w4sJ2d1WDVPEDhuxd/QLSH1Ysa9dhRI7CSaKkyOp7T2HDJWV0VWP29ulN5jfqEZed7UAHSbSvLjemRq2bTFECAUcpkG46zNlfYtJVq7LCDooyyOXp4c8mNza17D44M3BOtKQ2Lfbf2HDzXTydnP44now3aqOo+oIcv9Qaq6XjCqLgXNeH0bHdttBHe1YiESEEgnhXqwdEaE13NKhUr5BOgsx3mWovKD19qHUvyuVa2wS6UFbPsQnxzdjrapGS3Hq9+AqJsVj3slqzzXZLqR26UlH15WLsxIjy2tCWya82y73KAfoLwJEwDYErPiqHp+BpdXJ5c3lxco8uLL/MzhWryMzKyT1BjKj9Qkn4XmqcpE8Sk2Ftt8FTl1T5KEIitj689WP3C0B6hVQg7Q8PZdSg4du2xPFpQNyxgQbKCwiEfuLaZe2/H9CcApTJmJc6t5gfRsVm06gmtNBA9dumynwYI+Xp1xc7W2iVjd5IH9Y5lDds6ffKS5jFv0p7LoOYySFkL/c3UjLrlu8fl5Ufn5J3zsZKLOxNdTq5HG+GhXYmmxD+nbz8CCCydSN6JdHywY0L+hxOmGvWeU+lzKt1PKt1z0hQntZ4z53PmfM6cjZnz3VhyPue45xz3nON2z3HZKd+9ZLj/fcpyQj9dwS8KMd3HTMJ62QEEACXtHMD/n+BRubw/MN+0dOqHCliyn17UvmbOdkpHdccjqG1H+TmIDhvDlQ3hvNUsyk33hhCLEaTP51QmO3YbfxQhHRFN2Ukj5NEfXzJn9EhOb5jw7nSvJ9c65qED+s40+0UsoCBV/zA+uYb/kOHbyeU5gt94DSZTC/LwD+OpVUiMB3U+oH+4CSN2lsrig/+ggzhsu9nQNfrLZxD+n5bs0dujBwhmAI+ogSAalgGlYLqPXKOx8FmNhTL5tGWfqq5UeqIEc9tXf5Ui1WR4zkEFeH06whSDg3SFYYgx01qia99da3BiB31ESftA6I40pJktSWmubQD6oLWcV2JsVGejCdajp/R8HDCx0KfoiO03IE10WO0MZPl7g9Ytj+Vjt/U1ZiElKT/9+gtQSwMEFAAAAAgAKrFrUrTh18HmAAAAXgEAAA0AAABleHRlbnNpb24ueW1sfY8xT8MwEIX3/IpTly6J1XRgyMAAZUAClpa5uqav5CTnnNpuAogfj2NRsXWxfJ/evXuvqqoCnxEaxGlTECn3aCicbfqP8BlTbda1qRPhQfYWI+zMVmaVkMf5Ih5hP3zFbhYv7tfmblG4SeH/Hd/EBnq4wCfi/AerfHPM5tvoFAfP2nYlPWtritb1PTSGhn6SetchgK6MJrE25RjAnkQpdqB3lTkqW9qhHyxH0PLpWooe/zaXdBLYo8mWtxTUstIBNAomHOnkXZ/PvCIybTg9Ae2cvcz4RUIsU6c8bDs30SYJU11T/AJQSwECPwAUAAAACAAMs2tS20L9hB0MAACxRgAADAAkAAAAAAAAACAAAAAAAAAAZXh0ZW5zaW9uLnB5CgAgAAAAAAABABgAWyMy6LwW1wGBoMkAvRbXAf8So/m8FtcBUEsBAj8AFAAAAAgAKrFrUrTh18HmAAAAXgEAAA0AJAAAAAAAAAAgAAAARwwAAGV4dGVuc2lvbi55bWwKACAAAAAAAAEAGAAvInHNuhbXAYGgyQC9FtcBBNuEtrsW1wFQSwUGAAAAAAIAAgC9AAAAWA0AAAAA</ext_archive><icon_date_created>2018-09-05 06:52:14</icon_date_created><sys_updated_on>2021-04-01 08:48:27</sys_updated_on><output_return_text/><sys_updated_by>ops.admin</sys_updated_by><ext_version>1.21.1</ext_version><sys_created_on>2021-03-11 21:05:45</sys_created_on><ext_python_extra_paths/><agent_cluster_var/><agent_cluster_var_check>false</agent_cluster_var_check><wait_for_output>false</wait_for_output><template_type>1</template_type><sys_created_by>ops.admin</sys_created_by><output_return_nline>100</output_return_nline><exit_code_text/><exit_code_fr>0</exit_code_fr><runtime_dir/><output_return_type>1</output_return_type><log_level>0</log_level><script/><broadcast_cluster_var_check>false</broadcast_cluster_var_check><ext_checksum>F74E383F36046FC1F351B52A4A78298738D1B6EA2CC6A6BDCA4EDF2014A99AF6</ext_checksum><agent_type>1</agent_type><script_type_windows>uapy</script_type_windows><output_condition_value/><automatic_output_fr>0</automatic_output_fr><agent_cluster/><name>SQL</name><exit_codes>0</exit_codes><broadcast_cluster/><extension>sql</extension><output_path_expression/><ext_owner>Nils Buer</ext_owner><use_common_script>false</use_common_script><credentials/><icon_filesize>1558</icon_filesize><icon>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</icon><credential_fr>0</credential_fr><description>v1.21 Execute SQL scripts and functions MSQL, SQLSERVER, ORACLE, POSTGRES and SAP HANA</description><environment_variables_fr>0</environment_variables_fr><agent_var/><icon_filename>FAVICON48x48px.png</icon_filename><output_condition_operator>1</output_condition_operator><sys_id>60ac23256cae44edb21ed0c6917071ed</sys_id><variable_prefix>var</variable_prefix><system_template>false</system_template><script_windows>#!/opt/universal/python3.6/bin/python3
# !/usr/bin/python
###################################################
#
#    Name: ut_execute_dbscript.py
#
#    Purpose: execute an oracle, sqlserver db script
#
#
#    Prerequisites:
#     - Universal Agent for Windows/Linux
#     - Python 3.7.x and higher
#     - ODBC driver (https://docs.microsoft.com/de-de/sql/connect/odbc/linux-mac/installing-the-microsoft-odbc-driver-for-sql-server?view=sql-server-2017)
#     - yum -y install gcc gcc-c++ kernel-devel for pyodbc
#     - requires on windows oracle instant client Version 18.3.0.0.0 http://www.oracle.com/technetwork/topics/winx64soft-089540.html
#     - requires on windows Visual Studio VS 2013 https://support.microsoft.com/en-us/help/2977003/the-latest-supported-visual-c-downloads#bookmark-vs2013
#     - check the odbc drivername in /etc/odbcinst.ini
#     - Requires the Python modules via pip
#     - pip install pyodbc
#     - pip install datetime
#     - pip install argparse
#     - pip install logging
#
#     Version History:
#
#     1.0  Nils Buer    2018-09-05  initial version
#     1.1  Nils Buer    2019-09-12  windows authentication added
#     1.3  Nils Buer    2019-09-16  names for authentication adjusted
#     1.4  Nils Buer    2019-09-17  SET NOCOUNT ON added
#     1.5  A.Saglam     2020-05-18  Update for Oracle call, corrections, added mode
#     1.6  A.Saglam     2020-05-19  Added commit call to oracle sql if no output
#     1.7  A.Saglam     2020-10-23  activated Postgresql
#     1.8   ASA NBU     2020-10-26  merged SAP HANA into here
#     1.9   ASA NBU     2020-10-26  bugfix
#     1.10  ASA NBU     2020-10-27  bugfix
#     1.11  ASA NBU     2020-10-27  bugfix
#     1.12  ASA NBU     2020-10-27  bugfix
#     1.13  ASA NBU     2020-10-27  bugfix
#     1.14  ASA NBU     2020-10-29  bugfix
#     1.15  ASA NBU     2020-10-29  Mode added for function execute_oracle_block_plsql
#     1.16  ASA NBU     2020-11-02  Authentication for oracle removed in choice
#     1.17  ASA         2020-11-12  conditional import
#     1.18  NBU         2020-12-18  SAP bugfix
#     1.19  NBU, AS     2020-12-21  NO COUNT removed
#     1.20  NBU         2021-01-11  debug print (noCount + script_data) outcommented
#     1.21  NBU         2021-02-16  bugfix
####################################################
import logging
import sys
# import cx_Oracle
# import pyodbc
# from hdbcli import dbapi

gl_version = "1.21"
gl_variable_prefix = "var"
#

# -- logging settings DEBUG, INFO, WARNING, ERROR, CRITICAL
logging.basicConfig(level="${ops_var_loglevel}",
                    format=' %(asctime)s - %(levelname)s - %(message)s')

def global_imports():
    if "${ops_var_database_type}" == "oracle":
        global cx_Oracle
        import cx_Oracle
    elif "${ops_var_database_type}" in "mysql,postgresql,sqlserver":
        global pyodbc
        import pyodbc
    elif "${ops_var_database_type}" == "hana":
        global dbapi
        from hdbcli import dbapi
    pass

# -- Main Logic Function
def main():
    """calls the required functions to run the stored procedures"""
    global_imports()
    print_variables()
    stored_procedure_type()


def print_variables_x():
    logging.info(" Executing version " + gl_version)
    logging.info(" Server: ${ops_var_server}")
    logging.info(" database: ${ops_var_database}")
    logging.info(
        " database port e.g. 1521 oracle, 3306 mysql, 1433 mssql: ${ops_var_database_port}")
    # logging.info(" username: ${_credentialUser('${ops_var_credentials}')}")
    # logging.info(" password: ${_credentialPwd('${ops_var_credentials}')}")
    logging.info(" odbc driver name: ${ops_var_odbc_drivername}")
    logging.info(" schema: ${ops_var_schema}")
    logging.info(" Output processing: ${ops_var_getoutput}")
    logging.info(" Script to execute: ${ops_var_script}")


def print_variables():
    logging.info("Python version &lt;&lt;&lt; " + sys.version + " &gt;&gt;&gt;")
    logging.info("Executing task version " + gl_version + " with the following "
                                                          "parameters")
    print_defined_variables(gl_variable_prefix)


def print_defined_variables(variable_prefix):
    all_variables = r"""${_scope}"""
    separate_variables = [variable for variable in all_variables.split(', ') if
                          "ops_" + variable_prefix in variable]
    logging.info(str(separate_variables).replace(", ", ",\n"))


def stored_procedure_type():
    logging.info(" Connecting to ${ops_var_database_type} ...")
    if "${ops_var_database_type}" == "oracle":
        if "${ops_var_scripttype}" == "sqlscript":
            execute_oracle_block_sql()
        elif "${ops_var_scripttype}" == "plsqlblock":
            execute_oracle_block_plsql()
        else:
            logging.info("selections needs to be one of: sqlscript, plsqlblock")
            exit(1)
    elif "${ops_var_database_type}" == "mysql":
        execute_mysql_block()
    elif "${ops_var_database_type}" == "postgresql":
        execute_postgresql_block()
    elif "${ops_var_database_type}" == "sqlserver":
        execute_sqlserver_block()
    elif "${ops_var_database_type}" == "hana":
        execute_sap_hana_block()
    else:
        logging.error(
            "ERROR &gt;&gt;  database_type: ${ops_var_database_type} needs to be one of: oracle, mysql, sqlserver")
        exit(1)


def execute_oracle_block_plsql():
    dsn_tns = cx_Oracle.makedsn('${ops_var_server}', '${ops_var_database_port}',
                                service_name='${ops_var_database}')  # if needed, place an 'r' before any parameter in order to address any special character such as '\'.
    logging.info("DSN:: %s", str(dsn_tns))
    try:
        connection_mode = int(${ops_var_connection_mode})
    except TypeError:
        connection_mode = 0
    if not connection_mode:
        cnxn = cx_Oracle.connect(
            user=r"${_credentialUser('${ops_var_credentials}')}",
            password="${_credentialPwd('${ops_var_credentials}')}",
            dsn=dsn_tns)  # if needed, place an 'r' before any parameter in order to address any special character such as '\'. For example, if your user name contains '\', you'll need to place 'r' before the user name: user=r'User Name'
    else:
        cnxn = cx_Oracle.connect(
            user=r"${_credentialUser('${ops_var_credentials}')}",
            password="${_credentialPwd('${ops_var_credentials}')}",
            dsn=dsn_tns,
            mode=connection_mode)  # if needed, place an 'r' before any parameter in order to address any special character such as '\'. For example, if your user name contains '\', you'll need to place 'r' before the user name: user=r'User Name'
    cursor = cnxn.cursor()
    if "${ops_var_getoutput}" == "true":
        cursor.callproc("dbms_output.enable")
    else:
        logging.info(" No output processing")

    script = open(r'''${_scriptPath('${ops_var_script}')}''', 'r')
    script_data = script.read()

    try:
        cursor.execute(script_data)
        logging.info(" script: ${ops_var_script} executed")
    except cx_Oracle.DatabaseError as err:
        logging.error('%s' % err)
        exit(1)

    if "${ops_var_getoutput}" == "true":
        statusVar = cursor.var(cx_Oracle.NUMBER)
        lineVar = cursor.var(cx_Oracle.STRING)
        while True:
            cursor.callproc("dbms_output.get_line", (lineVar, statusVar))
            if statusVar.getvalue() != 0:
                break
            print(lineVar.getvalue())

    cursor.close()
    cnxn.close()


def execute_oracle_block_sql():
    try:
        dsn_tns = cx_Oracle.makedsn('${ops_var_server}',
                                    '${ops_var_database_port}',
                                    service_name='${ops_var_database}')  # if needed, place an 'r' before any parameter in order to address any special character such as '\'.
        logging.info("DSN:: %s", str(dsn_tns))
        try:
            connection_mode = int(${ops_var_connection_mode})
        except TypeError:
            connection_mode = 0
        if not connection_mode:
            cnxn = cx_Oracle.connect(
                user=r"${_credentialUser('${ops_var_credentials}')}",
                password="${_credentialPwd('${ops_var_credentials}')}",
                dsn=dsn_tns)  # if needed, place an 'r' before any parameter in order to address any special character such as '\'. For example, if your user name contains '\', you'll need to place 'r' before the user name: user=r'User Name'
        else:
            cnxn = cx_Oracle.connect(
                user=r"${_credentialUser('${ops_var_credentials}')}",
                password="${_credentialPwd('${ops_var_credentials}')}",
                dsn=dsn_tns,
                mode=connection_mode)  # if needed, place an 'r' before any parameter in order to address any special character such as '\'. For example, if your user name contains '\', you'll need to place 'r' before the user name: user=r'User Name'
        cursor = cnxn.cursor()
        if "${ops_var_getoutput}" == "true":
            cursor.callproc("dbms_output.enable")
        else:
            logging.info(" No output processing")

        script = open(r'''${_scriptPath('${ops_var_script}')}''', 'r')
        script_data = script.read()
    except Exception as exception:
        logging.error('%s' % exception)
        exit(1)

    try:
        cursor.execute(script_data)
        logging.info(" script: ${ops_var_script} executed")
    except cx_Oracle.DatabaseError as err:
        logging.error('%s' % err)
        exit(1)

    # print result
    if "${ops_var_getoutput}" == "true":
        while True:
            row = cursor.fetchone()
            if not row:
                break
            print(row)
    else:
        logging.info(" No output processing")
        cnxn.commit()
    logging.info("After Output Processing")
    cursor.close()
    cnxn.close()


def execute_sqlserver_block():
    try:
        if "${ops_var_authentication}" == "windows":
            cnxn = pyodbc.connect(
                'DRIVER={${ops_var_odbc_drivername}};'
                'SERVER=${ops_var_server};'
                'DATABASE=${ops_var_database};'
                'trusted_connection=yes')
        elif "${ops_var_authentication}" == "sqlserver":
            cnxn = pyodbc.connect("DRIVER={${ops_var_odbc_drivername}};"
                                  "SERVER=${ops_var_server};"
                                  "DATABASE=${ops_var_database};"
                                  "UID=${_credentialUser('${ops_var_credentials}')};"
                                  "PWD=${_credentialPwd('${ops_var_credentials}')}")


        else:
            logging.error(
                "ERROR &gt;&gt; authentication: needs to be one of: windows, sqlserver")
        cursor = cnxn.cursor()
        script = open(r'''${_scriptPath('${ops_var_script}')}''', 'r')
        script_data = script.read()
        noCount = """ SET NOCOUNT ON; """
        # print (noCount + script_data)
        #cursor.execute(noCount + script_data)
        cursor.execute(script_data)
        logging.info(" script: ${ops_var_script} executed")
    except pyodbc.Error as err:
        logging.error('%s' % err)
        exit(1)
    except Exception as exception:
        logging.error('%s' % exception)
        exit(1)
    # print result
    if "${ops_var_getoutput}" == "true":
        try:
            row = cursor.fetchone()
            while row is not None:
                print(row)
                row = cursor.fetchone()
        except pyodbc.ProgrammingError as e:
            logging.warning(" No output message: " + str(e))
    # Close and delete cursor
    cnxn.commit()
    cursor.close()
    # Close Connection
    cnxn.close()


def execute_mysql_block():
    try:
        cnxn = pyodbc.connect("DRIVER={${ops_var_odbc_drivername}};"
                              "SERVER=${ops_var_server};"
                              "DATABASE=${ops_var_database};"
                              "UID=${_credentialUser('${ops_var_credentials}')};"
                              "PWD=${_credentialPwd('${ops_var_credentials}')};"
                              "PORT=${ops_var_database_port};"
                              "SslMode=none;"
                              )
        cursor = cnxn.cursor()
        script = open(r'''${_scriptPath('${ops_var_script}')}''', 'r')
        script_data = script.read()
        # noCount = """ SET NOCOUNT ON; """
        cursor.execute(script_data)
        logging.info(" script: ${ops_var_script} executed")
        cnxn.commit()
    except pyodbc.Error as err:
        logging.error('%s' % err)
        exit(1)
    except Exception as exception:
        logging.error('%s' % exception)
        exit(1)
    # print result
    if "${ops_var_getoutput}" == "true":
        try:
            row = cursor.fetchone()
            while row is not None:
                print(row)
                row = cursor.fetchone()
        except pyodbc.ProgrammingError as e:
            logging.warning(" No output message: " + str(e))
    # Close and delete cursor
    cursor.close()
    # Close Connection
    cnxn.close()


def execute_postgresql_block():
    try:
        cnxn = pyodbc.connect("DRIVER={${ops_var_odbc_drivername}};"
                              "SERVER=${ops_var_server};"
                              "DATABASE=${ops_var_database};"
                              "UID=${_credentialUser('${ops_var_credentials}')};"
                              "PWD=${_credentialPwd('${ops_var_credentials}')};"
                              "PORT=${ops_var_database_port};")
        cursor = cnxn.cursor()
        script = open(r'''${_scriptPath('${ops_var_script}')}''', 'r')
        script_data = script.read()
        # noCount = """ SET NOCOUNT ON; """
        cursor.execute(script_data)
        logging.info(" script: ${ops_var_script} executed")
        cnxn.commit()
    except pyodbc.Error as err:
        logging.error('%s' % err)
        exit(1)
    except Exception as exception:
        logging.error('%s' % exception)
        exit(1)
    # print result
    if "${ops_var_getoutput}" == "true":
        try:
            row = cursor.fetchone()
            while row is not None:
                print(row)
                row = cursor.fetchone()
        except pyodbc.ProgrammingError as e:
            logging.warning(" No output message: " + str(e))
    # Close and delete cursor
    cursor.close()
    # Close Connection
    cnxn.close()


def execute_sap_hana_block():
    # Initialize your connection
    conn = dbapi.connect(
        address='${ops_var_server}',
        port='${ops_var_database_port}',
        user="${_credentialUser('${ops_var_credentials}')}",
        password="${_credentialPwd('${ops_var_credentials}')}"
    )
    # If no errors, print connected
    logging.info(f"Connection Status is: {conn.isconnected()}")
    script = open(r'''${_scriptPath('${ops_var_script}')}''', 'r')
    script_data = script.read()
    cursor = conn.cursor()
    # sql_command = "SELECT * FROM SYS.RS_TABLES_;"
    try:
        column_separator = str(${ops_var_colsep})
    except TypeError:
        column_separator = ","

    cursor = conn.cursor()
    # sql_command = "SELECT * FROM SYS.RS_TABLES_;"
    try:
        cursor.execute(script_data)
        #for row in cursor:
        #    print(row)
    except Exception as exception:
        logging.error("Error message: " + str(exception))
        exit(1)
    try:
        rows = cursor.fetchall()
        for row in rows:
            for i, col in enumerate(row):
                # print ("%s" % col, end=" ")
                print(f"{col}", end=column_separator if i != len(row) - 1 else "")
            print(" ")
    except Exception as exception:
        logging.warning(" No output message: " + str(exception))
    cursor.close()
    conn.close()
    pass


# --
if __name__ == '__main__':
    main()
</script_windows><credentials_var_check>false</credentials_var_check><agent_fr>0</agent_fr><ext_organization>Stonebranch, Inc.</ext_organization><ext_comments>These comments will appear in the Universal Template 'Extension Comments' field.
The 'Extension Comments' field can be viewed from the Meta Data section, the List, or the Show Details.
</ext_comments><agent_var_check>false</agent_var_check><output_failure_only>false</output_failure_only><output_return_sline>1</output_return_sline><always_cancel_on_finish>false</always_cancel_on_finish><output_type>1</output_type><desktop_interact>false</desktop_interact><ext_requires_python>&gt;2.6</ext_requires_python><script_unix>#!/opt/universal/python3.6/bin/python3
# !/usr/bin/python
###################################################
#
#    Name: ut_execute_dbscript.py
#
#    Purpose: execute an oracle, sqlserver db script
#
#
#    Prerequisites:
#     - Universal Agent for Windows/Linux
#     - Python 3.7.x and higher
#     - ODBC driver (https://docs.microsoft.com/de-de/sql/connect/odbc/linux-mac/installing-the-microsoft-odbc-driver-for-sql-server?view=sql-server-2017)
#     - yum -y install gcc gcc-c++ kernel-devel for pyodbc
#     - requires on windows oracle instant client Version 18.3.0.0.0 http://www.oracle.com/technetwork/topics/winx64soft-089540.html
#     - requires on windows Visual Studio VS 2013 https://support.microsoft.com/en-us/help/2977003/the-latest-supported-visual-c-downloads#bookmark-vs2013
#     - check the odbc drivername in /etc/odbcinst.ini
#     - Requires the Python modules via pip
#     - pip install pyodbc
#     - pip install datetime
#     - pip install argparse
#     - pip install logging
#
#     Version History:
#
#     1.0  Nils Buer    2018-09-05  initial version
#     1.1  Nils Buer    2019-09-12  windows authentication added
#     1.3  Nils Buer    2019-09-16  names for authentication adjusted
#     1.4  Nils Buer    2019-09-17  SET NOCOUNT ON added
#     1.5  A.Saglam     2020-05-18  Update for Oracle call, corrections, added mode
#     1.6  A.Saglam     2020-05-19  Added commit call to oracle sql if no output
#     1.7  A.Saglam     2020-10-23  activated Postgresql
#     1.8   ASA NBU     2020-10-26  merged SAP HANA into here
#     1.9   ASA NBU     2020-10-26  bugfix
#     1.10  ASA NBU     2020-10-27  bugfix
#     1.11  ASA NBU     2020-10-27  bugfix
#     1.12  ASA NBU     2020-10-27  bugfix
#     1.13  ASA NBU     2020-10-27  bugfix
#     1.14  ASA NBU     2020-10-29  bugfix
#     1.15  ASA NBU     2020-10-29  Mode added for function execute_oracle_block_plsql
#     1.16  ASA NBU     2020-11-02  Authentication for oracle removed in choice
#     1.17  ASA         2020-11-12  conditional import
#     1.18  NBU         2020-12-18  SAP bugfix
#     1.19  NBU, AS     2020-12-21  NO COUNT removed
#     1.20  NBU         2021-01-11  debug print (noCount + script_data) outcommented
#     1.21  NBU         2021-02-16  bugfix
####################################################
import logging
import sys
# import cx_Oracle
# import pyodbc
# from hdbcli import dbapi

gl_version = "1.21"
gl_variable_prefix = "var"
#

# -- logging settings DEBUG, INFO, WARNING, ERROR, CRITICAL
logging.basicConfig(level="${ops_var_loglevel}",
                    format=' %(asctime)s - %(levelname)s - %(message)s')

def global_imports():
    if "${ops_var_database_type}" == "oracle":
        global cx_Oracle
        import cx_Oracle
    elif "${ops_var_database_type}" in "mysql,postgresql,sqlserver":
        global pyodbc
        import pyodbc
    elif "${ops_var_database_type}" == "hana":
        global dbapi
        from hdbcli import dbapi
    pass

# -- Main Logic Function
def main():
    """calls the required functions to run the stored procedures"""
    global_imports()
    print_variables()
    stored_procedure_type()


def print_variables_x():
    logging.info(" Executing version " + gl_version)
    logging.info(" Server: ${ops_var_server}")
    logging.info(" database: ${ops_var_database}")
    logging.info(
        " database port e.g. 1521 oracle, 3306 mysql, 1433 mssql: ${ops_var_database_port}")
    # logging.info(" username: ${_credentialUser('${ops_var_credentials}')}")
    # logging.info(" password: ${_credentialPwd('${ops_var_credentials}')}")
    logging.info(" odbc driver name: ${ops_var_odbc_drivername}")
    logging.info(" schema: ${ops_var_schema}")
    logging.info(" Output processing: ${ops_var_getoutput}")
    logging.info(" Script to execute: ${ops_var_script}")


def print_variables():
    logging.info("Python version &lt;&lt;&lt; " + sys.version + " &gt;&gt;&gt;")
    logging.info("Executing task version " + gl_version + " with the following "
                                                          "parameters")
    print_defined_variables(gl_variable_prefix)


def print_defined_variables(variable_prefix):
    all_variables = r"""${_scope}"""
    separate_variables = [variable for variable in all_variables.split(', ') if
                          "ops_" + variable_prefix in variable]
    logging.info(str(separate_variables).replace(", ", ",\n"))


def stored_procedure_type():
    logging.info(" Connecting to ${ops_var_database_type} ...")
    if "${ops_var_database_type}" == "oracle":
        if "${ops_var_scripttype}" == "sqlscript":
            execute_oracle_block_sql()
        elif "${ops_var_scripttype}" == "plsqlblock":
            execute_oracle_block_plsql()
        else:
            logging.info("selections needs to be one of: sqlscript, plsqlblock")
            exit(1)
    elif "${ops_var_database_type}" == "mysql":
        execute_mysql_block()
    elif "${ops_var_database_type}" == "postgresql":
        execute_postgresql_block()
    elif "${ops_var_database_type}" == "sqlserver":
        execute_sqlserver_block()
    elif "${ops_var_database_type}" == "hana":
        execute_sap_hana_block()
    else:
        logging.error(
            "ERROR &gt;&gt;  database_type: ${ops_var_database_type} needs to be one of: oracle, mysql, sqlserver")
        exit(1)


def execute_oracle_block_plsql():
    dsn_tns = cx_Oracle.makedsn('${ops_var_server}', '${ops_var_database_port}',
                                service_name='${ops_var_database}')  # if needed, place an 'r' before any parameter in order to address any special character such as '\'.
    logging.info("DSN:: %s", str(dsn_tns))
    try:
        connection_mode = int(${ops_var_connection_mode})
    except TypeError:
        connection_mode = 0
    if not connection_mode:
        cnxn = cx_Oracle.connect(
            user=r"${_credentialUser('${ops_var_credentials}')}",
            password="${_credentialPwd('${ops_var_credentials}')}",
            dsn=dsn_tns)  # if needed, place an 'r' before any parameter in order to address any special character such as '\'. For example, if your user name contains '\', you'll need to place 'r' before the user name: user=r'User Name'
    else:
        cnxn = cx_Oracle.connect(
            user=r"${_credentialUser('${ops_var_credentials}')}",
            password="${_credentialPwd('${ops_var_credentials}')}",
            dsn=dsn_tns,
            mode=connection_mode)  # if needed, place an 'r' before any parameter in order to address any special character such as '\'. For example, if your user name contains '\', you'll need to place 'r' before the user name: user=r'User Name'
    cursor = cnxn.cursor()
    if "${ops_var_getoutput}" == "true":
        cursor.callproc("dbms_output.enable")
    else:
        logging.info(" No output processing")

    script = open(r'''${_scriptPath('${ops_var_script}')}''', 'r')
    script_data = script.read()

    try:
        cursor.execute(script_data)
        logging.info(" script: ${ops_var_script} executed")
    except cx_Oracle.DatabaseError as err:
        logging.error('%s' % err)
        exit(1)

    if "${ops_var_getoutput}" == "true":
        statusVar = cursor.var(cx_Oracle.NUMBER)
        lineVar = cursor.var(cx_Oracle.STRING)
        while True:
            cursor.callproc("dbms_output.get_line", (lineVar, statusVar))
            if statusVar.getvalue() != 0:
                break
            print(lineVar.getvalue())

    cursor.close()
    cnxn.close()


def execute_oracle_block_sql():
    try:
        dsn_tns = cx_Oracle.makedsn('${ops_var_server}',
                                    '${ops_var_database_port}',
                                    service_name='${ops_var_database}')  # if needed, place an 'r' before any parameter in order to address any special character such as '\'.
        logging.info("DSN:: %s", str(dsn_tns))
        try:
            connection_mode = int(${ops_var_connection_mode})
        except TypeError:
            connection_mode = 0
        if not connection_mode:
            cnxn = cx_Oracle.connect(
                user=r"${_credentialUser('${ops_var_credentials}')}",
                password="${_credentialPwd('${ops_var_credentials}')}",
                dsn=dsn_tns)  # if needed, place an 'r' before any parameter in order to address any special character such as '\'. For example, if your user name contains '\', you'll need to place 'r' before the user name: user=r'User Name'
        else:
            cnxn = cx_Oracle.connect(
                user=r"${_credentialUser('${ops_var_credentials}')}",
                password="${_credentialPwd('${ops_var_credentials}')}",
                dsn=dsn_tns,
                mode=connection_mode)  # if needed, place an 'r' before any parameter in order to address any special character such as '\'. For example, if your user name contains '\', you'll need to place 'r' before the user name: user=r'User Name'
        cursor = cnxn.cursor()
        if "${ops_var_getoutput}" == "true":
            cursor.callproc("dbms_output.enable")
        else:
            logging.info(" No output processing")

        script = open(r'''${_scriptPath('${ops_var_script}')}''', 'r')
        script_data = script.read()
    except Exception as exception:
        logging.error('%s' % exception)
        exit(1)

    try:
        cursor.execute(script_data)
        logging.info(" script: ${ops_var_script} executed")
    except cx_Oracle.DatabaseError as err:
        logging.error('%s' % err)
        exit(1)

    # print result
    if "${ops_var_getoutput}" == "true":
        while True:
            row = cursor.fetchone()
            if not row:
                break
            print(row)
    else:
        logging.info(" No output processing")
        cnxn.commit()
    logging.info("After Output Processing")
    cursor.close()
    cnxn.close()


def execute_sqlserver_block():
    try:
        if "${ops_var_authentication}" == "windows":
            cnxn = pyodbc.connect(
                'DRIVER={${ops_var_odbc_drivername}};'
                'SERVER=${ops_var_server};'
                'DATABASE=${ops_var_database};'
                'trusted_connection=yes')
        elif "${ops_var_authentication}" == "sqlserver":
            cnxn = pyodbc.connect("DRIVER={${ops_var_odbc_drivername}};"
                                  "SERVER=${ops_var_server};"
                                  "DATABASE=${ops_var_database};"
                                  "UID=${_credentialUser('${ops_var_credentials}')};"
                                  "PWD=${_credentialPwd('${ops_var_credentials}')}")


        else:
            logging.error(
                "ERROR &gt;&gt; authentication: needs to be one of: windows, sqlserver")
        cursor = cnxn.cursor()
        script = open(r'''${_scriptPath('${ops_var_script}')}''', 'r')
        script_data = script.read()
        noCount = """ SET NOCOUNT ON; """
        # print (noCount + script_data)
        #cursor.execute(noCount + script_data)
        cursor.execute(script_data)
        logging.info(" script: ${ops_var_script} executed")
    except pyodbc.Error as err:
        logging.error('%s' % err)
        exit(1)
    except Exception as exception:
        logging.error('%s' % exception)
        exit(1)
    # print result
    if "${ops_var_getoutput}" == "true":
        try:
            row = cursor.fetchone()
            while row is not None:
                print(row)
                row = cursor.fetchone()
        except pyodbc.ProgrammingError as e:
            logging.warning(" No output message: " + str(e))
    # Close and delete cursor
    cnxn.commit()
    cursor.close()
    # Close Connection
    cnxn.close()


def execute_mysql_block():
    try:
        cnxn = pyodbc.connect("DRIVER={${ops_var_odbc_drivername}};"
                              "SERVER=${ops_var_server};"
                              "DATABASE=${ops_var_database};"
                              "UID=${_credentialUser('${ops_var_credentials}')};"
                              "PWD=${_credentialPwd('${ops_var_credentials}')};"
                              "PORT=${ops_var_database_port};"
                              "SslMode=none;"
                              )
        cursor = cnxn.cursor()
        script = open(r'''${_scriptPath('${ops_var_script}')}''', 'r')
        script_data = script.read()
        # noCount = """ SET NOCOUNT ON; """
        cursor.execute(script_data)
        logging.info(" script: ${ops_var_script} executed")
        cnxn.commit()
    except pyodbc.Error as err:
        logging.error('%s' % err)
        exit(1)
    except Exception as exception:
        logging.error('%s' % exception)
        exit(1)
    # print result
    if "${ops_var_getoutput}" == "true":
        try:
            row = cursor.fetchone()
            while row is not None:
                print(row)
                row = cursor.fetchone()
        except pyodbc.ProgrammingError as e:
            logging.warning(" No output message: " + str(e))
    # Close and delete cursor
    cursor.close()
    # Close Connection
    cnxn.close()


def execute_postgresql_block():
    try:
        cnxn = pyodbc.connect("DRIVER={${ops_var_odbc_drivername}};"
                              "SERVER=${ops_var_server};"
                              "DATABASE=${ops_var_database};"
                              "UID=${_credentialUser('${ops_var_credentials}')};"
                              "PWD=${_credentialPwd('${ops_var_credentials}')};"
                              "PORT=${ops_var_database_port};")
        cursor = cnxn.cursor()
        script = open(r'''${_scriptPath('${ops_var_script}')}''', 'r')
        script_data = script.read()
        # noCount = """ SET NOCOUNT ON; """
        cursor.execute(script_data)
        logging.info(" script: ${ops_var_script} executed")
        cnxn.commit()
    except pyodbc.Error as err:
        logging.error('%s' % err)
        exit(1)
    except Exception as exception:
        logging.error('%s' % exception)
        exit(1)
    # print result
    if "${ops_var_getoutput}" == "true":
        try:
            row = cursor.fetchone()
            while row is not None:
                print(row)
                row = cursor.fetchone()
        except pyodbc.ProgrammingError as e:
            logging.warning(" No output message: " + str(e))
    # Close and delete cursor
    cursor.close()
    # Close Connection
    cnxn.close()


def execute_sap_hana_block():
    # Initialize your connection
    conn = dbapi.connect(
        address='${ops_var_server}',
        port='${ops_var_database_port}',
        user="${_credentialUser('${ops_var_credentials}')}",
        password="${_credentialPwd('${ops_var_credentials}')}"
    )
    # If no errors, print connected
    logging.info(f"Connection Status is: {conn.isconnected()}")
    script = open(r'''${_scriptPath('${ops_var_script}')}''', 'r')
    script_data = script.read()
    cursor = conn.cursor()
    # sql_command = "SELECT * FROM SYS.RS_TABLES_;"
    try:
        column_separator = str(${ops_var_colsep})
    except TypeError:
        column_separator = ","

    cursor = conn.cursor()
    # sql_command = "SELECT * FROM SYS.RS_TABLES_;"
    try:
        cursor.execute(script_data)
        #for row in cursor:
        #    print(row)
    except Exception as exception:
        logging.error("Error message: " + str(exception))
        exit(1)
    try:
        rows = cursor.fetchall()
        for row in rows:
            for i, col in enumerate(row):
                # print ("%s" % col, end=" ")
                print(f"{col}", end=column_separator if i != len(row) - 1 else "")
            print(" ")
    except Exception as exception:
        logging.warning(" No output message: " + str(exception))
    cursor.close()
    conn.close()
    pass


# --
if __name__ == '__main__':
    main()
</script_unix><output_return_file/><run_as_sudo>false</run_as_sudo><output_content_type>1</output_content_type><broadcast_cluster_var/><environment/><ext_api_level>1.0.0</ext_api_level><elevate_user>false</elevate_user><exit_code_output/><output_condition_strategy>1</output_condition_strategy><exit_code_processing>1</exit_code_processing><auto_cleanup>false</auto_cleanup><create_console>false</create_console><related_items_node><ops_unv_tmplt_field action="INSERT_OR_UPDATE"><choice_sort_option>1</choice_sort_option><form_start_row>false</form_start_row><sys_updated_on>2021-03-12 11:28:01</sys_updated_on><boolean_value_type>1</boolean_value_type><required>false</required><choice_dynamic>false</choice_dynamic><field_mask/><boolean_no_value/><require_if_field/><sys_id>1b37775fc741441bbcf56b158fb30acf</sys_id><require_if_field_value/><array_name_title/><sys_updated_by>ops.admin</sys_updated_by><array_value_title/><sys_created_on>2021-03-12 11:28:01</sys_created_on><choice_allow_multiple>false</choice_allow_multiple><field_value>1ba306b74e114d20a862dbd65bf9f1db</field_value><no_space_if_hidden>false</no_space_if_hidden><require_if_visible>false</require_if_visible><sys_created_by>ops.admin</sys_created_by><int_field_min/><universal_template_id>60ac23256cae44edb21ed0c6917071ed</universal_template_id><show_if_field/><text_type>1</text_type><boolean_yes_value/><preserve_output_on_rerun>false</preserve_output_on_rerun><form_col_span>1</form_col_span><preserve_value_if_hidden>false</preserve_value_if_hidden><field_length/><form_end_row>false</form_end_row><label>Script</label><int_field_max/><choice_allow_empty>false</choice_allow_empty><sequence>1</sequence><show_if_field_value/><form_row_span>1</form_row_span><field_restriction>0</field_restriction><default_list_view>false</default_list_view><choice_fields/><hint/><field_mapping>scriptField1</field_mapping><name>script</name><field_regex/><field_type>6</field_type></ops_unv_tmplt_field><ops_unv_tmplt_field action="INSERT_OR_UPDATE"><choice_sort_option>1</choice_sort_option><form_start_row>false</form_start_row><sys_updated_on>2021-03-12 11:28:01</sys_updated_on><boolean_value_type>1</boolean_value_type><required>false</required><choice_dynamic>false</choice_dynamic><field_mask/><boolean_no_value/><require_if_field/><sys_id>28da28f882044fbdab431009a5245d1c</sys_id><require_if_field_value/><array_name_title/><sys_updated_by>ops.admin</sys_updated_by><array_value_title/><sys_created_on>2021-03-12 11:28:01</sys_created_on><choice_allow_multiple>false</choice_allow_multiple><field_value/><no_space_if_hidden>false</no_space_if_hidden><require_if_visible>false</require_if_visible><sys_created_by>ops.admin</sys_created_by><int_field_min/><universal_template_id>60ac23256cae44edb21ed0c6917071ed</universal_template_id><show_if_field/><text_type>1</text_type><boolean_yes_value/><preserve_output_on_rerun>false</preserve_output_on_rerun><form_col_span>1</form_col_span><preserve_value_if_hidden>false</preserve_value_if_hidden><field_length/><form_end_row>false</form_end_row><label>Database Credentials</label><int_field_max/><choice_allow_empty>false</choice_allow_empty><sequence>5</sequence><show_if_field_value/><form_row_span>1</form_row_span><field_restriction>0</field_restriction><default_list_view>false</default_list_view><choice_fields/><hint/><field_mapping>credentialField1</field_mapping><name>credentials</name><field_regex/><field_type>5</field_type></ops_unv_tmplt_field><ops_unv_tmplt_field action="INSERT_OR_UPDATE"><choice_sort_option>1</choice_sort_option><form_start_row>false</form_start_row><sys_updated_on>2021-03-12 11:28:01</sys_updated_on><boolean_value_type>1</boolean_value_type><required>false</required><choice_dynamic>false</choice_dynamic><field_mask/><boolean_no_value/><require_if_field/><sys_id>35be55fd217d40aca622974722d52058</sys_id><require_if_field_value/><array_name_title/><sys_updated_by>ops.admin</sys_updated_by><array_value_title/><sys_created_on>2021-03-12 11:28:01</sys_created_on><choice_allow_multiple>false</choice_allow_multiple><field_value>INFO</field_value><no_space_if_hidden>false</no_space_if_hidden><require_if_visible>false</require_if_visible><sys_created_by>ops.admin</sys_created_by><int_field_min/><universal_template_id>60ac23256cae44edb21ed0c6917071ed</universal_template_id><show_if_field/><text_type>1</text_type><boolean_yes_value/><preserve_output_on_rerun>false</preserve_output_on_rerun><form_col_span>1</form_col_span><preserve_value_if_hidden>false</preserve_value_if_hidden><field_length/><form_end_row>false</form_end_row><label>Loglevel</label><int_field_max/><choice_allow_empty>false</choice_allow_empty><sequence>2</sequence><show_if_field_value/><form_row_span>1</form_row_span><field_restriction>0</field_restriction><default_list_view>false</default_list_view><choice_fields/><hint/><field_mapping>choiceField1</field_mapping><name>loglevel</name><field_regex/><field_type>4</field_type></ops_unv_tmplt_field><ops_unv_tmplt_field action="INSERT_OR_UPDATE"><choice_sort_option>1</choice_sort_option><form_start_row>false</form_start_row><sys_updated_on>2021-03-12 11:28:01</sys_updated_on><boolean_value_type>1</boolean_value_type><required>false</required><choice_dynamic>false</choice_dynamic><field_mask/><boolean_no_value/><require_if_field/><sys_id>37ab3fc4bfcb4ea89704793c8682fdab</sys_id><require_if_field_value/><array_name_title/><sys_updated_by>ops.admin</sys_updated_by><array_value_title/><sys_created_on>2021-03-12 11:28:01</sys_created_on><choice_allow_multiple>false</choice_allow_multiple><field_value>";"</field_value><no_space_if_hidden>false</no_space_if_hidden><require_if_visible>false</require_if_visible><sys_created_by>ops.admin</sys_created_by><int_field_min/><universal_template_id>60ac23256cae44edb21ed0c6917071ed</universal_template_id><show_if_field>choiceField3</show_if_field><text_type>1</text_type><boolean_yes_value/><preserve_output_on_rerun>false</preserve_output_on_rerun><form_col_span>1</form_col_span><preserve_value_if_hidden>false</preserve_value_if_hidden><field_length/><form_end_row>false</form_end_row><label>Column Separator</label><int_field_max/><choice_allow_empty>false</choice_allow_empty><sequence>12</sequence><show_if_field_value>hana</show_if_field_value><form_row_span>1</form_row_span><field_restriction>0</field_restriction><default_list_view>false</default_list_view><choice_fields/><hint/><field_mapping>choiceField6</field_mapping><name>colsep</name><field_regex/><field_type>4</field_type></ops_unv_tmplt_field><ops_unv_tmplt_field action="INSERT_OR_UPDATE"><choice_sort_option>1</choice_sort_option><form_start_row>false</form_start_row><sys_updated_on>2021-03-12 11:28:01</sys_updated_on><boolean_value_type>1</boolean_value_type><required>false</required><choice_dynamic>false</choice_dynamic><field_mask/><boolean_no_value/><require_if_field/><sys_id>3ec3d9a21cce401786944816e96762cb</sys_id><require_if_field_value/><array_name_title/><sys_updated_by>ops.admin</sys_updated_by><array_value_title/><sys_created_on>2021-03-12 11:28:01</sys_created_on><choice_allow_multiple>false</choice_allow_multiple><field_value>cx_Oracle.SYSDBA</field_value><no_space_if_hidden>false</no_space_if_hidden><require_if_visible>false</require_if_visible><sys_created_by>ops.admin</sys_created_by><int_field_min/><universal_template_id>60ac23256cae44edb21ed0c6917071ed</universal_template_id><show_if_field>choiceField3</show_if_field><text_type>1</text_type><boolean_yes_value/><preserve_output_on_rerun>false</preserve_output_on_rerun><form_col_span>1</form_col_span><preserve_value_if_hidden>false</preserve_value_if_hidden><field_length/><form_end_row>false</form_end_row><label>Mode</label><int_field_max/><choice_allow_empty>false</choice_allow_empty><sequence>11</sequence><show_if_field_value>oracle</show_if_field_value><form_row_span>1</form_row_span><field_restriction>0</field_restriction><default_list_view>false</default_list_view><choice_fields/><hint>Connection Authorization Mode, e.g. cx_Oracle.SYSDBA</hint><field_mapping>choiceField7</field_mapping><name>connection_mode</name><field_regex/><field_type>4</field_type></ops_unv_tmplt_field><ops_unv_tmplt_field action="INSERT_OR_UPDATE"><choice_sort_option>1</choice_sort_option><form_start_row>false</form_start_row><sys_updated_on>2021-03-12 11:28:01</sys_updated_on><boolean_value_type>1</boolean_value_type><required>false</required><choice_dynamic>false</choice_dynamic><field_mask/><boolean_no_value/><require_if_field/><sys_id>75f7105cd58940339cda100950d703e3</sys_id><require_if_field_value/><array_name_title/><sys_updated_by>ops.admin</sys_updated_by><array_value_title/><sys_created_on>2021-03-12 11:28:01</sys_created_on><choice_allow_multiple>false</choice_allow_multiple><field_value/><no_space_if_hidden>false</no_space_if_hidden><require_if_visible>false</require_if_visible><sys_created_by>ops.admin</sys_created_by><int_field_min/><universal_template_id>60ac23256cae44edb21ed0c6917071ed</universal_template_id><show_if_field/><text_type>1</text_type><boolean_yes_value/><preserve_output_on_rerun>false</preserve_output_on_rerun><form_col_span>1</form_col_span><preserve_value_if_hidden>false</preserve_value_if_hidden><field_length/><form_end_row>false</form_end_row><label>Database Name</label><int_field_max/><choice_allow_empty>false</choice_allow_empty><sequence>0</sequence><show_if_field_value/><form_row_span>1</form_row_span><field_restriction>0</field_restriction><default_list_view>false</default_list_view><choice_fields/><hint/><field_mapping>textField1</field_mapping><name>database</name><field_regex/><field_type>1</field_type></ops_unv_tmplt_field><ops_unv_tmplt_field action="INSERT_OR_UPDATE"><choice_sort_option>1</choice_sort_option><form_start_row>false</form_start_row><sys_updated_on>2021-03-12 11:28:01</sys_updated_on><boolean_value_type>1</boolean_value_type><required>false</required><choice_dynamic>false</choice_dynamic><field_mask/><boolean_no_value/><require_if_field/><sys_id>a64a995d425b44cea89b717c21669fa9</sys_id><require_if_field_value/><array_name_title/><sys_updated_by>ops.admin</sys_updated_by><array_value_title/><sys_created_on>2021-03-12 11:28:01</sys_created_on><choice_allow_multiple>false</choice_allow_multiple><field_value>false</field_value><no_space_if_hidden>false</no_space_if_hidden><require_if_visible>false</require_if_visible><sys_created_by>ops.admin</sys_created_by><int_field_min/><universal_template_id>60ac23256cae44edb21ed0c6917071ed</universal_template_id><show_if_field/><text_type>1</text_type><boolean_yes_value/><preserve_output_on_rerun>false</preserve_output_on_rerun><form_col_span>1</form_col_span><preserve_value_if_hidden>false</preserve_value_if_hidden><field_length/><form_end_row>false</form_end_row><label>Get Output</label><int_field_max/><choice_allow_empty>false</choice_allow_empty><sequence>7</sequence><show_if_field_value/><form_row_span>1</form_row_span><field_restriction>0</field_restriction><default_list_view>false</default_list_view><choice_fields/><hint/><field_mapping>booleanField1</field_mapping><name>getoutput</name><field_regex/><field_type>3</field_type></ops_unv_tmplt_field><ops_unv_tmplt_field action="INSERT_OR_UPDATE"><choice_sort_option>1</choice_sort_option><form_start_row>false</form_start_row><sys_updated_on>2021-03-12 11:28:01</sys_updated_on><boolean_value_type>1</boolean_value_type><required>false</required><choice_dynamic>false</choice_dynamic><field_mask/><boolean_no_value/><require_if_field/><sys_id>bc3fc741aa7a4595b93d8f3bbe25083a</sys_id><require_if_field_value/><array_name_title/><sys_updated_by>ops.admin</sys_updated_by><array_value_title/><sys_created_on>2021-03-12 11:28:01</sys_created_on><choice_allow_multiple>false</choice_allow_multiple><field_value/><no_space_if_hidden>false</no_space_if_hidden><require_if_visible>false</require_if_visible><sys_created_by>ops.admin</sys_created_by><int_field_min/><universal_template_id>60ac23256cae44edb21ed0c6917071ed</universal_template_id><show_if_field/><text_type>1</text_type><boolean_yes_value/><preserve_output_on_rerun>false</preserve_output_on_rerun><form_col_span>1</form_col_span><preserve_value_if_hidden>false</preserve_value_if_hidden><field_length/><form_end_row>false</form_end_row><label>Database Port</label><int_field_max/><choice_allow_empty>false</choice_allow_empty><sequence>4</sequence><show_if_field_value/><form_row_span>1</form_row_span><field_restriction>0</field_restriction><default_list_view>false</default_list_view><choice_fields/><hint/><field_mapping>textField3</field_mapping><name>database_port</name><field_regex/><field_type>1</field_type></ops_unv_tmplt_field><ops_unv_tmplt_field action="INSERT_OR_UPDATE"><choice_sort_option>1</choice_sort_option><form_start_row>false</form_start_row><sys_updated_on>2021-03-12 11:28:01</sys_updated_on><boolean_value_type>1</boolean_value_type><required>false</required><choice_dynamic>false</choice_dynamic><field_mask/><boolean_no_value/><require_if_field/><sys_id>c0437f5e3ea04a89b0dbe85e26f01f03</sys_id><require_if_field_value/><array_name_title/><sys_updated_by>ops.admin</sys_updated_by><array_value_title/><sys_created_on>2021-03-12 11:28:01</sys_created_on><choice_allow_multiple>false</choice_allow_multiple><field_value>ODBC Driver 17 for SQL Server</field_value><no_space_if_hidden>false</no_space_if_hidden><require_if_visible>false</require_if_visible><sys_created_by>ops.admin</sys_created_by><int_field_min/><universal_template_id>60ac23256cae44edb21ed0c6917071ed</universal_template_id><show_if_field>choiceField3</show_if_field><text_type>1</text_type><boolean_yes_value/><preserve_output_on_rerun>false</preserve_output_on_rerun><form_col_span>1</form_col_span><preserve_value_if_hidden>false</preserve_value_if_hidden><field_length/><form_end_row>false</form_end_row><label>ODBC Drivername</label><int_field_max/><choice_allow_empty>false</choice_allow_empty><sequence>6</sequence><show_if_field_value>mysql,sqlserver,postgresql</show_if_field_value><form_row_span>1</form_row_span><field_restriction>0</field_restriction><default_list_view>false</default_list_view><choice_fields/><hint/><field_mapping>choiceField2</field_mapping><name>odbc_drivername</name><field_regex/><field_type>4</field_type></ops_unv_tmplt_field><ops_unv_tmplt_field action="INSERT_OR_UPDATE"><choice_sort_option>1</choice_sort_option><form_start_row>false</form_start_row><sys_updated_on>2021-03-12 11:28:01</sys_updated_on><boolean_value_type>1</boolean_value_type><required>false</required><choice_dynamic>false</choice_dynamic><field_mask/><boolean_no_value/><require_if_field/><sys_id>c4d89c9c1ea64bcc92ff23e8d7f8515f</sys_id><require_if_field_value/><array_name_title/><sys_updated_by>ops.admin</sys_updated_by><array_value_title/><sys_created_on>2021-03-12 11:28:01</sys_created_on><choice_allow_multiple>false</choice_allow_multiple><field_value>sqlscript</field_value><no_space_if_hidden>false</no_space_if_hidden><require_if_visible>false</require_if_visible><sys_created_by>ops.admin</sys_created_by><int_field_min/><universal_template_id>60ac23256cae44edb21ed0c6917071ed</universal_template_id><show_if_field>choiceField3</show_if_field><text_type>1</text_type><boolean_yes_value/><preserve_output_on_rerun>false</preserve_output_on_rerun><form_col_span>1</form_col_span><preserve_value_if_hidden>false</preserve_value_if_hidden><field_length/><form_end_row>false</form_end_row><label>Script Type</label><int_field_max/><choice_allow_empty>false</choice_allow_empty><sequence>9</sequence><show_if_field_value>oracle</show_if_field_value><form_row_span>1</form_row_span><field_restriction>0</field_restriction><default_list_view>false</default_list_view><choice_fields/><hint/><field_mapping>choiceField4</field_mapping><name>scripttype</name><field_regex/><field_type>4</field_type></ops_unv_tmplt_field><ops_unv_tmplt_field action="INSERT_OR_UPDATE"><choice_sort_option>1</choice_sort_option><form_start_row>false</form_start_row><sys_updated_on>2021-03-12 11:28:01</sys_updated_on><boolean_value_type>1</boolean_value_type><required>false</required><choice_dynamic>false</choice_dynamic><field_mask/><boolean_no_value/><require_if_field/><sys_id>d4b0b4d7233d448eb506c5e99942cf36</sys_id><require_if_field_value/><array_name_title/><sys_updated_by>ops.admin</sys_updated_by><array_value_title/><sys_created_on>2021-03-12 11:28:01</sys_created_on><choice_allow_multiple>false</choice_allow_multiple><field_value/><no_space_if_hidden>false</no_space_if_hidden><require_if_visible>false</require_if_visible><sys_created_by>ops.admin</sys_created_by><int_field_min/><universal_template_id>60ac23256cae44edb21ed0c6917071ed</universal_template_id><show_if_field/><text_type>1</text_type><boolean_yes_value/><preserve_output_on_rerun>false</preserve_output_on_rerun><form_col_span>1</form_col_span><preserve_value_if_hidden>false</preserve_value_if_hidden><field_length/><form_end_row>false</form_end_row><label>Server</label><int_field_max/><choice_allow_empty>false</choice_allow_empty><sequence>3</sequence><show_if_field_value/><form_row_span>1</form_row_span><field_restriction>0</field_restriction><default_list_view>false</default_list_view><choice_fields/><hint/><field_mapping>textField2</field_mapping><name>server</name><field_regex/><field_type>1</field_type></ops_unv_tmplt_field><ops_unv_tmplt_field action="INSERT_OR_UPDATE"><choice_sort_option>1</choice_sort_option><form_start_row>false</form_start_row><sys_updated_on>2021-03-12 11:28:01</sys_updated_on><boolean_value_type>1</boolean_value_type><required>false</required><choice_dynamic>false</choice_dynamic><field_mask/><boolean_no_value/><require_if_field/><sys_id>d9d7d971376a40b8b0e58d841f610466</sys_id><require_if_field_value/><array_name_title/><sys_updated_by>ops.admin</sys_updated_by><array_value_title/><sys_created_on>2021-03-12 11:28:01</sys_created_on><choice_allow_multiple>false</choice_allow_multiple><field_value>oracle</field_value><no_space_if_hidden>false</no_space_if_hidden><require_if_visible>false</require_if_visible><sys_created_by>ops.admin</sys_created_by><int_field_min/><universal_template_id>60ac23256cae44edb21ed0c6917071ed</universal_template_id><show_if_field/><text_type>1</text_type><boolean_yes_value/><preserve_output_on_rerun>false</preserve_output_on_rerun><form_col_span>1</form_col_span><preserve_value_if_hidden>false</preserve_value_if_hidden><field_length/><form_end_row>false</form_end_row><label>Database Type</label><int_field_max/><choice_allow_empty>false</choice_allow_empty><sequence>8</sequence><show_if_field_value/><form_row_span>1</form_row_span><field_restriction>0</field_restriction><default_list_view>false</default_list_view><choice_fields/><hint/><field_mapping>choiceField3</field_mapping><name>database_type</name><field_regex/><field_type>4</field_type></ops_unv_tmplt_field><ops_unv_tmplt_field action="INSERT_OR_UPDATE"><choice_sort_option>1</choice_sort_option><form_start_row>false</form_start_row><sys_updated_on>2021-03-12 11:28:01</sys_updated_on><boolean_value_type>1</boolean_value_type><required>false</required><choice_dynamic>false</choice_dynamic><field_mask/><boolean_no_value/><require_if_field/><sys_id>f78805378c95434e9f01100fe2b7846c</sys_id><require_if_field_value/><array_name_title/><sys_updated_by>ops.admin</sys_updated_by><array_value_title/><sys_created_on>2021-03-12 11:28:01</sys_created_on><choice_allow_multiple>false</choice_allow_multiple><field_value>sqlserver</field_value><no_space_if_hidden>false</no_space_if_hidden><require_if_visible>false</require_if_visible><sys_created_by>ops.admin</sys_created_by><int_field_min/><universal_template_id>60ac23256cae44edb21ed0c6917071ed</universal_template_id><show_if_field>choiceField3</show_if_field><text_type>1</text_type><boolean_yes_value/><preserve_output_on_rerun>false</preserve_output_on_rerun><form_col_span>1</form_col_span><preserve_value_if_hidden>false</preserve_value_if_hidden><field_length/><form_end_row>false</form_end_row><label>Authentication</label><int_field_max/><choice_allow_empty>false</choice_allow_empty><sequence>10</sequence><show_if_field_value>sqlserver</show_if_field_value><form_row_span>1</form_row_span><field_restriction>0</field_restriction><default_list_view>false</default_list_view><choice_fields/><hint/><field_mapping>choiceField5</field_mapping><name>authentication</name><field_regex/><field_type>4</field_type></ops_unv_tmplt_field><ops_unv_tmplt_field_choice action="INSERT_OR_UPDATE"><field_id>c0437f5e3ea04a89b0dbe85e26f01f03</field_id><use_field_value_for_label>true</use_field_value_for_label><sys_id>0bc2ec670d4641b2a3dea096f7f3c6d7</sys_id><sequence>0</sequence><sys_updated_by>ops.admin</sys_updated_by><sys_created_on>2021-03-12 11:28:01</sys_created_on><field_value_label>SQL Server Native Client 11.0</field_value_label><field_value>SQL Server Native Client 11.0</field_value><sys_updated_on>2021-03-12 11:28:01</sys_updated_on><sys_created_by>ops.admin</sys_created_by><universal_template_id>60ac23256cae44edb21ed0c6917071ed</universal_template_id></ops_unv_tmplt_field_choice><ops_unv_tmplt_field_choice action="INSERT_OR_UPDATE"><field_id>d9d7d971376a40b8b0e58d841f610466</field_id><use_field_value_for_label>false</use_field_value_for_label><sys_id>1aed8d90e53446f8a3ec243cb96d9ea3</sys_id><sequence>4</sequence><sys_updated_by>ops.admin</sys_updated_by><sys_created_on>2021-03-12 11:28:01</sys_created_on><field_value_label>SAP HANA</field_value_label><field_value>hana</field_value><sys_updated_on>2021-03-12 11:28:01</sys_updated_on><sys_created_by>ops.admin</sys_created_by><universal_template_id>60ac23256cae44edb21ed0c6917071ed</universal_template_id></ops_unv_tmplt_field_choice><ops_unv_tmplt_field_choice action="INSERT_OR_UPDATE"><field_id>d9d7d971376a40b8b0e58d841f610466</field_id><use_field_value_for_label>true</use_field_value_for_label><sys_id>2762873dac72486e84e3ee5a269b1d36</sys_id><sequence>1</sequence><sys_updated_by>ops.admin</sys_updated_by><sys_created_on>2021-03-12 11:28:01</sys_created_on><field_value_label>mysql</field_value_label><field_value>mysql</field_value><sys_updated_on>2021-03-12 11:28:01</sys_updated_on><sys_created_by>ops.admin</sys_created_by><universal_template_id>60ac23256cae44edb21ed0c6917071ed</universal_template_id></ops_unv_tmplt_field_choice><ops_unv_tmplt_field_choice action="INSERT_OR_UPDATE"><field_id>37ab3fc4bfcb4ea89704793c8682fdab</field_id><use_field_value_for_label>false</use_field_value_for_label><sys_id>300d33d8f99647fdbd5de7c9d761a4cc</sys_id><sequence>1</sequence><sys_updated_by>ops.admin</sys_updated_by><sys_created_on>2021-03-12 11:28:01</sys_created_on><field_value_label>Comma</field_value_label><field_value>","</field_value><sys_updated_on>2021-03-12 11:28:01</sys_updated_on><sys_created_by>ops.admin</sys_created_by><universal_template_id>60ac23256cae44edb21ed0c6917071ed</universal_template_id></ops_unv_tmplt_field_choice><ops_unv_tmplt_field_choice action="INSERT_OR_UPDATE"><field_id>35be55fd217d40aca622974722d52058</field_id><use_field_value_for_label>true</use_field_value_for_label><sys_id>30be638b014a4139934aed8044306738</sys_id><sequence>0</sequence><sys_updated_by>ops.admin</sys_updated_by><sys_created_on>2021-03-12 11:28:01</sys_created_on><field_value_label>INFO</field_value_label><field_value>INFO</field_value><sys_updated_on>2021-03-12 11:28:01</sys_updated_on><sys_created_by>ops.admin</sys_created_by><universal_template_id>60ac23256cae44edb21ed0c6917071ed</universal_template_id></ops_unv_tmplt_field_choice><ops_unv_tmplt_field_choice action="INSERT_OR_UPDATE"><field_id>d9d7d971376a40b8b0e58d841f610466</field_id><use_field_value_for_label>true</use_field_value_for_label><sys_id>31e56e4922d04f5892d64b7cd3456940</sys_id><sequence>3</sequence><sys_updated_by>ops.admin</sys_updated_by><sys_created_on>2021-03-12 11:28:01</sys_created_on><field_value_label>postgresql</field_value_label><field_value>postgresql</field_value><sys_updated_on>2021-03-12 11:28:01</sys_updated_on><sys_created_by>ops.admin</sys_created_by><universal_template_id>60ac23256cae44edb21ed0c6917071ed</universal_template_id></ops_unv_tmplt_field_choice><ops_unv_tmplt_field_choice action="INSERT_OR_UPDATE"><field_id>35be55fd217d40aca622974722d52058</field_id><use_field_value_for_label>true</use_field_value_for_label><sys_id>3bee69dd31fb4d3d9671cef1788b5126</sys_id><sequence>3</sequence><sys_updated_by>ops.admin</sys_updated_by><sys_created_on>2021-03-12 11:28:01</sys_created_on><field_value_label>CRITICAL</field_value_label><field_value>CRITICAL</field_value><sys_updated_on>2021-03-12 11:28:01</sys_updated_on><sys_created_by>ops.admin</sys_created_by><universal_template_id>60ac23256cae44edb21ed0c6917071ed</universal_template_id></ops_unv_tmplt_field_choice><ops_unv_tmplt_field_choice action="INSERT_OR_UPDATE"><field_id>35be55fd217d40aca622974722d52058</field_id><use_field_value_for_label>true</use_field_value_for_label><sys_id>3e28d21c9141417c9eae8353e467ad21</sys_id><sequence>1</sequence><sys_updated_by>ops.admin</sys_updated_by><sys_created_on>2021-03-12 11:28:01</sys_created_on><field_value_label>DEBUG</field_value_label><field_value>DEBUG</field_value><sys_updated_on>2021-03-12 11:28:01</sys_updated_on><sys_created_by>ops.admin</sys_created_by><universal_template_id>60ac23256cae44edb21ed0c6917071ed</universal_template_id></ops_unv_tmplt_field_choice><ops_unv_tmplt_field_choice action="INSERT_OR_UPDATE"><field_id>3ec3d9a21cce401786944816e96762cb</field_id><use_field_value_for_label>false</use_field_value_for_label><sys_id>45d7cf109c1e458d9ec656db336f83fb</sys_id><sequence>2</sequence><sys_updated_by>ops.admin</sys_updated_by><sys_created_on>2021-03-12 11:28:01</sys_created_on><field_value_label>sysoper</field_value_label><field_value>cx_Oracle.SYSOPER</field_value><sys_updated_on>2021-03-12 11:28:01</sys_updated_on><sys_created_by>ops.admin</sys_created_by><universal_template_id>60ac23256cae44edb21ed0c6917071ed</universal_template_id></ops_unv_tmplt_field_choice><ops_unv_tmplt_field_choice action="INSERT_OR_UPDATE"><field_id>35be55fd217d40aca622974722d52058</field_id><use_field_value_for_label>true</use_field_value_for_label><sys_id>5572d91c91a94826bf75a26731149fae</sys_id><sequence>4</sequence><sys_updated_by>ops.admin</sys_updated_by><sys_created_on>2021-03-12 11:28:01</sys_created_on><field_value_label>ERROR</field_value_label><field_value>ERROR</field_value><sys_updated_on>2021-03-12 11:28:01</sys_updated_on><sys_created_by>ops.admin</sys_created_by><universal_template_id>60ac23256cae44edb21ed0c6917071ed</universal_template_id></ops_unv_tmplt_field_choice><ops_unv_tmplt_field_choice action="INSERT_OR_UPDATE"><field_id>37ab3fc4bfcb4ea89704793c8682fdab</field_id><use_field_value_for_label>false</use_field_value_for_label><sys_id>75c6190c359f45b5afd16bac55e3053f</sys_id><sequence>3</sequence><sys_updated_by>ops.admin</sys_updated_by><sys_created_on>2021-03-12 11:28:01</sys_created_on><field_value_label>Hash "#"</field_value_label><field_value>"#"</field_value><sys_updated_on>2021-03-12 11:28:01</sys_updated_on><sys_created_by>ops.admin</sys_created_by><universal_template_id>60ac23256cae44edb21ed0c6917071ed</universal_template_id></ops_unv_tmplt_field_choice><ops_unv_tmplt_field_choice action="INSERT_OR_UPDATE"><field_id>3ec3d9a21cce401786944816e96762cb</field_id><use_field_value_for_label>false</use_field_value_for_label><sys_id>76350fdf00334170b6133e2279f0355f</sys_id><sequence>3</sequence><sys_updated_by>ops.admin</sys_updated_by><sys_created_on>2021-03-12 11:28:01</sys_created_on><field_value_label>sysbkp</field_value_label><field_value>cx_Oracle.SYSBKP</field_value><sys_updated_on>2021-03-12 11:28:01</sys_updated_on><sys_created_by>ops.admin</sys_created_by><universal_template_id>60ac23256cae44edb21ed0c6917071ed</universal_template_id></ops_unv_tmplt_field_choice><ops_unv_tmplt_field_choice action="INSERT_OR_UPDATE"><field_id>f78805378c95434e9f01100fe2b7846c</field_id><use_field_value_for_label>false</use_field_value_for_label><sys_id>82ca40e9ba544523b63adefb8d1724cd</sys_id><sequence>1</sequence><sys_updated_by>ops.admin</sys_updated_by><sys_created_on>2021-03-12 11:28:01</sys_created_on><field_value_label>SQLSERVER - Windows Authentication</field_value_label><field_value>windows</field_value><sys_updated_on>2021-03-12 11:28:01</sys_updated_on><sys_created_by>ops.admin</sys_created_by><universal_template_id>60ac23256cae44edb21ed0c6917071ed</universal_template_id></ops_unv_tmplt_field_choice><ops_unv_tmplt_field_choice action="INSERT_OR_UPDATE"><field_id>c0437f5e3ea04a89b0dbe85e26f01f03</field_id><use_field_value_for_label>true</use_field_value_for_label><sys_id>83f99fc97ac4416e99c719704fea30fe</sys_id><sequence>1</sequence><sys_updated_by>ops.admin</sys_updated_by><sys_created_on>2021-03-12 11:28:01</sys_created_on><field_value_label>ODBC Driver 17 for SQL Server</field_value_label><field_value>ODBC Driver 17 for SQL Server</field_value><sys_updated_on>2021-03-12 11:28:01</sys_updated_on><sys_created_by>ops.admin</sys_created_by><universal_template_id>60ac23256cae44edb21ed0c6917071ed</universal_template_id></ops_unv_tmplt_field_choice><ops_unv_tmplt_field_choice action="INSERT_OR_UPDATE"><field_id>3ec3d9a21cce401786944816e96762cb</field_id><use_field_value_for_label>true</use_field_value_for_label><sys_id>8b480b3fb48c49b19949f86fd599cf3a</sys_id><sequence>6</sequence><sys_updated_by>ops.admin</sys_updated_by><sys_created_on>2021-03-12 11:28:01</sys_created_on><field_value_label>None</field_value_label><field_value>None</field_value><sys_updated_on>2021-03-12 11:28:01</sys_updated_on><sys_created_by>ops.admin</sys_created_by><universal_template_id>60ac23256cae44edb21ed0c6917071ed</universal_template_id></ops_unv_tmplt_field_choice><ops_unv_tmplt_field_choice action="INSERT_OR_UPDATE"><field_id>c4d89c9c1ea64bcc92ff23e8d7f8515f</field_id><use_field_value_for_label>true</use_field_value_for_label><sys_id>99dcca1096304c39ac4da5b03eb2ea28</sys_id><sequence>0</sequence><sys_updated_by>ops.admin</sys_updated_by><sys_created_on>2021-03-12 11:28:01</sys_created_on><field_value_label>sqlscript</field_value_label><field_value>sqlscript</field_value><sys_updated_on>2021-03-12 11:28:01</sys_updated_on><sys_created_by>ops.admin</sys_created_by><universal_template_id>60ac23256cae44edb21ed0c6917071ed</universal_template_id></ops_unv_tmplt_field_choice><ops_unv_tmplt_field_choice action="INSERT_OR_UPDATE"><field_id>d9d7d971376a40b8b0e58d841f610466</field_id><use_field_value_for_label>true</use_field_value_for_label><sys_id>9bd7ae0973204a2482d87b95ce28b408</sys_id><sequence>0</sequence><sys_updated_by>ops.admin</sys_updated_by><sys_created_on>2021-03-12 11:28:01</sys_created_on><field_value_label>oracle</field_value_label><field_value>oracle</field_value><sys_updated_on>2021-03-12 11:28:01</sys_updated_on><sys_created_by>ops.admin</sys_created_by><universal_template_id>60ac23256cae44edb21ed0c6917071ed</universal_template_id></ops_unv_tmplt_field_choice><ops_unv_tmplt_field_choice action="INSERT_OR_UPDATE"><field_id>c0437f5e3ea04a89b0dbe85e26f01f03</field_id><use_field_value_for_label>true</use_field_value_for_label><sys_id>9c553432b57340058ab44175bf616ce2</sys_id><sequence>2</sequence><sys_updated_by>ops.admin</sys_updated_by><sys_created_on>2021-03-12 11:28:01</sys_created_on><field_value_label>MySQL ODBC 8.0 Unicode Driver</field_value_label><field_value>MySQL ODBC 8.0 Unicode Driver</field_value><sys_updated_on>2021-03-12 11:28:01</sys_updated_on><sys_created_by>ops.admin</sys_created_by><universal_template_id>60ac23256cae44edb21ed0c6917071ed</universal_template_id></ops_unv_tmplt_field_choice><ops_unv_tmplt_field_choice action="INSERT_OR_UPDATE"><field_id>d9d7d971376a40b8b0e58d841f610466</field_id><use_field_value_for_label>true</use_field_value_for_label><sys_id>9ddab5b8a40d4ba3b68dc54bd928f4ee</sys_id><sequence>2</sequence><sys_updated_by>ops.admin</sys_updated_by><sys_created_on>2021-03-12 11:28:01</sys_created_on><field_value_label>sqlserver</field_value_label><field_value>sqlserver</field_value><sys_updated_on>2021-03-12 11:28:01</sys_updated_on><sys_created_by>ops.admin</sys_created_by><universal_template_id>60ac23256cae44edb21ed0c6917071ed</universal_template_id></ops_unv_tmplt_field_choice><ops_unv_tmplt_field_choice action="INSERT_OR_UPDATE"><field_id>37ab3fc4bfcb4ea89704793c8682fdab</field_id><use_field_value_for_label>false</use_field_value_for_label><sys_id>a0678d48b15d46f1841c20312770c82e</sys_id><sequence>2</sequence><sys_updated_by>ops.admin</sys_updated_by><sys_created_on>2021-03-12 11:28:01</sys_created_on><field_value_label>Whitespace</field_value_label><field_value>" "</field_value><sys_updated_on>2021-03-12 11:28:01</sys_updated_on><sys_created_by>ops.admin</sys_created_by><universal_template_id>60ac23256cae44edb21ed0c6917071ed</universal_template_id></ops_unv_tmplt_field_choice><ops_unv_tmplt_field_choice action="INSERT_OR_UPDATE"><field_id>f78805378c95434e9f01100fe2b7846c</field_id><use_field_value_for_label>false</use_field_value_for_label><sys_id>ba24ec83e100450baf58468be04b9d12</sys_id><sequence>2</sequence><sys_updated_by>ops.admin</sys_updated_by><sys_created_on>2021-03-12 11:28:01</sys_created_on><field_value_label>ORACLE - Authentication by Oracle Database</field_value_label><field_value>oracle</field_value><sys_updated_on>2021-03-12 11:28:01</sys_updated_on><sys_created_by>ops.admin</sys_created_by><universal_template_id>60ac23256cae44edb21ed0c6917071ed</universal_template_id></ops_unv_tmplt_field_choice><ops_unv_tmplt_field_choice action="INSERT_OR_UPDATE"><field_id>37ab3fc4bfcb4ea89704793c8682fdab</field_id><use_field_value_for_label>false</use_field_value_for_label><sys_id>c82898c667bd449492a4f7088da7473c</sys_id><sequence>0</sequence><sys_updated_by>ops.admin</sys_updated_by><sys_created_on>2021-03-12 11:28:01</sys_created_on><field_value_label>Semicolon</field_value_label><field_value>";"</field_value><sys_updated_on>2021-03-12 11:28:01</sys_updated_on><sys_created_by>ops.admin</sys_created_by><universal_template_id>60ac23256cae44edb21ed0c6917071ed</universal_template_id></ops_unv_tmplt_field_choice><ops_unv_tmplt_field_choice action="INSERT_OR_UPDATE"><field_id>35be55fd217d40aca622974722d52058</field_id><use_field_value_for_label>true</use_field_value_for_label><sys_id>ca551a83ae6d46519ad643fd474355a7</sys_id><sequence>2</sequence><sys_updated_by>ops.admin</sys_updated_by><sys_created_on>2021-03-12 11:28:01</sys_created_on><field_value_label>WARNING</field_value_label><field_value>WARNING</field_value><sys_updated_on>2021-03-12 11:28:01</sys_updated_on><sys_created_by>ops.admin</sys_created_by><universal_template_id>60ac23256cae44edb21ed0c6917071ed</universal_template_id></ops_unv_tmplt_field_choice><ops_unv_tmplt_field_choice action="INSERT_OR_UPDATE"><field_id>3ec3d9a21cce401786944816e96762cb</field_id><use_field_value_for_label>false</use_field_value_for_label><sys_id>d8d8d11bb3df4a2d951ee0b86f8c05a9</sys_id><sequence>5</sequence><sys_updated_by>ops.admin</sys_updated_by><sys_created_on>2021-03-12 11:28:01</sys_created_on><field_value_label>syskmt</field_value_label><field_value>cx_Oracle.SYSKMT</field_value><sys_updated_on>2021-03-12 11:28:01</sys_updated_on><sys_created_by>ops.admin</sys_created_by><universal_template_id>60ac23256cae44edb21ed0c6917071ed</universal_template_id></ops_unv_tmplt_field_choice><ops_unv_tmplt_field_choice action="INSERT_OR_UPDATE"><field_id>3ec3d9a21cce401786944816e96762cb</field_id><use_field_value_for_label>false</use_field_value_for_label><sys_id>d8e59d3a3746489ea1087bccf223a4e1</sys_id><sequence>0</sequence><sys_updated_by>ops.admin</sys_updated_by><sys_created_on>2021-03-12 11:28:01</sys_created_on><field_value_label>sysdba</field_value_label><field_value>cx_Oracle.SYSDBA</field_value><sys_updated_on>2021-03-12 11:28:01</sys_updated_on><sys_created_by>ops.admin</sys_created_by><universal_template_id>60ac23256cae44edb21ed0c6917071ed</universal_template_id></ops_unv_tmplt_field_choice><ops_unv_tmplt_field_choice action="INSERT_OR_UPDATE"><field_id>c0437f5e3ea04a89b0dbe85e26f01f03</field_id><use_field_value_for_label>true</use_field_value_for_label><sys_id>df7b07ff471d4a0e8956ba8b700abeca</sys_id><sequence>3</sequence><sys_updated_by>ops.admin</sys_updated_by><sys_created_on>2021-03-12 11:28:01</sys_created_on><field_value_label>PostgreSQL Unicode</field_value_label><field_value>PostgreSQL Unicode</field_value><sys_updated_on>2021-03-12 11:28:01</sys_updated_on><sys_created_by>ops.admin</sys_created_by><universal_template_id>60ac23256cae44edb21ed0c6917071ed</universal_template_id></ops_unv_tmplt_field_choice><ops_unv_tmplt_field_choice action="INSERT_OR_UPDATE"><field_id>f78805378c95434e9f01100fe2b7846c</field_id><use_field_value_for_label>false</use_field_value_for_label><sys_id>f58a95e3096f42d89f241749b60272b9</sys_id><sequence>0</sequence><sys_updated_by>ops.admin</sys_updated_by><sys_created_on>2021-03-12 11:28:01</sys_created_on><field_value_label>SQLSERVER - SQLServer Authentication</field_value_label><field_value>sqlserver</field_value><sys_updated_on>2021-03-12 11:28:01</sys_updated_on><sys_created_by>ops.admin</sys_created_by><universal_template_id>60ac23256cae44edb21ed0c6917071ed</universal_template_id></ops_unv_tmplt_field_choice><ops_unv_tmplt_field_choice action="INSERT_OR_UPDATE"><field_id>c4d89c9c1ea64bcc92ff23e8d7f8515f</field_id><use_field_value_for_label>true</use_field_value_for_label><sys_id>f86fc7e6d41e471b96a8a9b0fb638a7c</sys_id><sequence>1</sequence><sys_updated_by>ops.admin</sys_updated_by><sys_created_on>2021-03-12 11:28:01</sys_created_on><field_value_label>plsqlblock</field_value_label><field_value>plsqlblock</field_value><sys_updated_on>2021-03-12 11:28:01</sys_updated_on><sys_created_by>ops.admin</sys_created_by><universal_template_id>60ac23256cae44edb21ed0c6917071ed</universal_template_id></ops_unv_tmplt_field_choice><ops_unv_tmplt_field_choice action="INSERT_OR_UPDATE"><field_id>3ec3d9a21cce401786944816e96762cb</field_id><use_field_value_for_label>false</use_field_value_for_label><sys_id>fb6ed268992541c396aab021ef6be147</sys_id><sequence>1</sequence><sys_updated_by>ops.admin</sys_updated_by><sys_created_on>2021-03-12 11:28:01</sys_created_on><field_value_label>sysasm</field_value_label><field_value>cx_Oracle.SYSASM</field_value><sys_updated_on>2021-03-12 11:28:01</sys_updated_on><sys_created_by>ops.admin</sys_created_by><universal_template_id>60ac23256cae44edb21ed0c6917071ed</universal_template_id></ops_unv_tmplt_field_choice><ops_unv_tmplt_field_choice action="INSERT_OR_UPDATE"><field_id>3ec3d9a21cce401786944816e96762cb</field_id><use_field_value_for_label>false</use_field_value_for_label><sys_id>fd5dd93e11c940d9b4dc22b3af42ee4e</sys_id><sequence>4</sequence><sys_updated_by>ops.admin</sys_updated_by><sys_created_on>2021-03-12 11:28:01</sys_created_on><field_value_label>sysdgd</field_value_label><field_value>cx_Oracle.SYSDGD</field_value><sys_updated_on>2021-03-12 11:28:01</sys_updated_on><sys_created_by>ops.admin</sys_created_by><universal_template_id>60ac23256cae44edb21ed0c6917071ed</universal_template_id></ops_unv_tmplt_field_choice></related_items_node></ops_unv_tmplt></unload>